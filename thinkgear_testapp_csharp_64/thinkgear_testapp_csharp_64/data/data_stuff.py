import tensorflow as tf
import numpy as np
from scipy import fftpack
import matplotlib.pyplot as plt


data_test = np.array([49.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 49.0, 49.0, 49.0, 48.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 49.0, 49.0, 50.0, 49.0, 50.0, 49.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 49.0, 49.0, 50.0, 48.0, 49.0, 49.0, 49.0, 49.0, 49.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 49.0, 49.0, 49.0, 50.0, 50.0, 49.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 48.0, 50.0, 49.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 49.0, 49.0, 48.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 48.0, 49.0, 49.0, 50.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 48.0, 49.0, 48.0, 49.0, 49.0, 49.0, 49.0, 49.0,
                      48.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 48.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 49.0, 50.0, 48.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 48.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 49.0, 50.0, 50.0, 49.0, 49.0, 49.0, 49.0, 50.0, 49.0, 49.0, 49.0, 50.0, 48.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 48.0, 49.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 51.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 49.0, 49.0, 50.0, 50.0, 49.0, 49.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 49.0, 49.0, 49.0, 48.0, 49.0, 50.0, 49.0, 48.0, 49.0, 50.0, 49.0, 50.0, 49.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 49.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 48.0, 50.0, 49.0, 49.0, 50.0, 50.0, 49.0, 49.0, 49.0, 49.0, 50.0])

data_test2 = np.array([50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 49.0, 49.0, 49.0, 48.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 49.0, 49.0, 50.0, 49.0, 50.0, 49.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 49.0, 49.0, 50.0, 48.0, 49.0, 49.0, 49.0, 49.0, 49.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 49.0, 49.0, 49.0, 50.0, 50.0, 49.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 48.0, 50.0, 49.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 49.0, 49.0, 48.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 48.0, 49.0, 49.0, 50.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 48.0, 49.0, 48.0, 49.0, 49.0, 49.0, 49.0, 49.0,
                       48.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 48.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 49.0, 50.0, 48.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 48.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 49.0, 50.0, 50.0, 49.0, 49.0, 49.0, 49.0, 50.0, 49.0, 49.0, 49.0, 50.0, 48.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 48.0, 49.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 51.0, 49.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 49.0, 49.0, 50.0, 50.0, 49.0, 49.0, 50.0, 50.0, 49.0, 50.0, 50.0, 50.0, 50.0, 49.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 49.0, 49.0, 49.0, 48.0, 49.0, 50.0, 49.0, 48.0, 49.0, 50.0, 49.0, 50.0, 49.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 50.0, 49.0, 49.0, 49.0, 50.0, 50.0, 50.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 49.0, 48.0, 50.0, 49.0, 49.0, 50.0, 50.0, 49.0, 49.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 50.0, 49.0, 49.0, 50.0, 49.0, 50.0, 50.0, 49.0, 49.0, 50.0])

#! only need first half of array, the second half is symmetric

# data = np.genfromtxt("output_raw.csv", delimiter=",", names=True)
# print(data)
# print(data.shape)
# print(data['id'])
# print(data.dtype.names)

sampling_rate = 512
sampling_rate_half = sampling_rate/2

#! for graph
t = np.linspace(0, 512, 1 * sampling_rate, endpoint=False)
t_half = np.linspace(0, 512/2, 512/2, endpoint=False)
t_50 = np.linspace(0, 50, 50, endpoint=False)

x = np.subtract(data_test, np.average(data_test))
ff = fftpack.fft(x)
freqs = fftpack.fftfreq(len(x)) * sampling_rate

fig, ax = plt.subplots()
ax.plot(t_half, np.abs(ff[0:256]))
plt.ylabel('amplitude')
plt.xlabel('time (512 samples per second)')

fig, ax = plt.subplots()
ax.stem(t_50, np.abs(ff[0:50]))
plt.ylabel('amplitude')
plt.xlabel('time (512 samples per second)')


plt.show()
